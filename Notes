Vragen
======
* Wordt een Aggregrate niet snel erg groot? Ja ja, is niet bedoeling, maar zie je dat toch niet snel gebeuren?
* Je doet dus NOOIT data updates in command afhandeling?

Info
====
docker run -p 3306:3306 --name homeconstruction -e MYSQL_DATABASE=homeconstruction -e MYSQL_ROOT_PASSWORD=build -e MYSQL_USER=build -e MYSQL_PASSWORD=build -d mysql:latest

TO DO
=====
* Customer UI minimale functionele versie afmaken
* Command UI
* Dan KISS toepassen
    //Vraag: voegt kotlin wat toe, of maakt alleen maar moeilijk?
* Review?
** Resolve all TODO's
** Add readme which explain domain model + (test) approach
* Retry to use Value Object as Aggregate Id (fails in Axon code)
* Optimistic locking
* Project naam uniek validatie
* Implement Flyway
* Create modules voor bounded contexts
* AggregateRoot versus Aggregate versus Entity versus Value Objects (kijk naar alle DDD types)
* Asynchrone commandbus versus synchrone commandbus (Unit of Work?)
* Toon events of aggregate
* CI
** https://about.gitlab.com/
* CDeploy to cloud environment
** Use docker
** Secure configuration management
** Rolling Upgrades
** https://www.cloudflare.com/
* Implement testing strategy (https://martinfowler.com/articles/practical-test-pyramid.html#UiTests)
* Static code analysis
* Exception management
* DevOps dashboard (incl. metrics)
* Grafisch overzicht van command > aggregate > event flow (design time en runtime)
* Alles in Kotlin